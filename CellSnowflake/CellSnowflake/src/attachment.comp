#version 450 core

layout(local_size_x = 1, local_size_y = 1, local_size_z = 1) in;

//フラグの代わり.....
const uint ISCRYSTAL = 1;	//ISCRYSTAL
const uint ISEDGECRYSTAL = 2;	//ISEDGECRYSTAL
const uint ISBOUNDARY = 4;	//ISBOUNDARY
const uint ISEDGEBOUNDARY = 8;	//ISEDGEBOUNDARY
const uint MZISODD = 16;	//セル番号のZ値が奇数である
const uint ISENDOFCELLS = 32;

//パラメータメモ（めんどい）
/*
0.8, 1.5, 0.5, 1.5, 0.5, 0.5, 0.1


*/
//パラメータ
const float beta01 = 0.9, 
			beta10 = 1.5, 
			beta11 = 0.5, 
			beta20 = 1.5, 
			beta21 = 0.5, 
			beta30 = 0.5, 
			beta31 = 0.1;

class Cell
{
	vec4 position;
	vec4 color;
	uint flags;
	float diffusionMass;
	float boundaryMass;
	int horizontalNeighbourNum;
	int verticalNeighbourNum;
};

layout(std430, binding = 0) buffer Cells
{
	Cell cell[];
};

layout(std430, binding = 1) buffer tmpCells
{
	Cell tmpCell[];
};

//flagIDは2進数の値
//flagsのビットのfragID番目（0から）が1ならtrue
bool isFlag(uint i, uint flagID) {
	return ((cell[i].flags & flagID) != 0);
}
void setFlagTrue(uint i, uint flagID) {
	tmpCell[i].flags |= flagID;
}
void setFlagFalse(uint i, uint flagID) {
	tmpCell[i].flags &= ~flagID;
}

void setEdgeCry(uint i){
	setFlagTrue(i, ISCRYSTAL);
	setFlagTrue(i, ISEDGECRYSTAL);
	setFlagFalse(i, ISBOUNDARY);
	setFlagFalse(i, ISEDGEBOUNDARY);
	tmpCell[i].diffusionMass = 0.0;
	//tmpCell[i].boundaryMass = 1.0;	//なった時点で閾値より高いし確かにいらんか
}

void main(){
	
	const uint i = gl_WorkGroupID.y * gl_NumWorkGroups.x * gl_NumWorkGroups.z +
		gl_WorkGroupID.z * gl_NumWorkGroups.x +
		gl_WorkGroupID.x;

	if(isFlag(i, ISEDGEBOUNDARY) && !isFlag(i, ISENDOFCELLS)){
		const int h = cell[i].horizontalNeighbourNum;
		const int v = cell[i].verticalNeighbourNum;
		const int hm = min(3, h);
		const int vm = min(1, v);

		float beta;

		if(h == 0 && v == 1){
			beta = beta01;
		}else if(hm == 1 && vm == 0){
			beta = beta10;
		}else if(hm == 1 && vm == 1){
			beta = beta11;
		}else if(hm == 2 && vm == 0){
			beta = beta20;
		}else if(hm == 2 && vm == 1){
			beta = beta21;
		}else if(hm == 3 && vm == 0){
			beta = beta30;
		}else if(hm == 3 && vm == 1){
			beta = beta31;
		}else{
			beta = 999;
		}

		if(cell[i].boundaryMass >= beta || (h >= 4 && v >= 1)){
			setEdgeCry(i);
		}
	}
}